generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  userName  String   @unique @map("user_name")
  email     String   @unique
  password  String
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  avatar    String?
  bio       String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Post    Post[]
  Like    Like[]
  Comment Comment[]

  @@map("users")
}

model Like {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String

  createdAt DateTime @default(now()) @map("created_at")

  @@unique([userId, postId])
  @@index([userId])
  @@index([postId])
  @@map("likes")
}

model Comment {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String

  text      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt()

  @@index([userId])
  @@index([postId])
  @@index([createdAt])
  @@map("comments")
}

model Post {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  title  String
  photos String[] @default([])
  videos String[] @default([])
  text   String

  likes    Like[]
  comments Comment[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([userId])
  @@index([createdAt])
  @@map("posts")
}
