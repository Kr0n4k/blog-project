name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'blog-backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'blog-backend/**'
      - '.github/workflows/backend-ci.yml'

env:
  NODE_VERSION: '18'
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: blog_test
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/blog_test

jobs:
  test:
    name: Test Backend
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: blog_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: blog-backend/yarn.lock

      - name: Install dependencies
        working-directory: ./blog-backend
        run: yarn install --frozen-lockfile

      - name: Generate Prisma client
        working-directory: ./blog-backend
        run: yarn prisma generate

      - name: Run database migrations
        working-directory: ./blog-backend
        run: yarn prisma db push
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Run linting
        working-directory: ./blog-backend
        run: yarn lint

      - name: Run type checking
        working-directory: ./blog-backend
        run: yarn build

      - name: Run tests
        working-directory: ./blog-backend
        run: yarn test:cov
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          REDIS_PASSWORD: ""
          SESSION_SECRET: test_secret
          COOKIES_SECRET: test_cookies_secret
          APPLICATION_PORT: 4000
          NODE_ENV: test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./blog-backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: blog-backend/yarn.lock

      - name: Install dependencies
        working-directory: ./blog-backend
        run: yarn install --frozen-lockfile

      - name: Run security audit
        working-directory: ./blog-backend
        run: yarn audit --level moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          working-directory: ./blog-backend

  build:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: blog-backend/yarn.lock

      - name: Install dependencies
        working-directory: ./blog-backend
        run: yarn install --frozen-lockfile

      - name: Build application
        working-directory: ./blog-backend
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: blog-backend/dist/
          retention-days: 7

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./blog-backend
          file: ./blog-backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/blog-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/blog-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
